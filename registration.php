<?php
    /* Проверка значений, которые передаются от пользователя.
    ( Используется функция - filter_var. Она позволяет отфильровать определенные значения.
    В нашем случае это значение -> $POST['login'] и $POST['password']. А так же удалить 
    из него различные html символы и различные символы, которые лучше 
    не добавлять в БД. ). Функция filter_var принимает 1 параметром ту строку, которую 
    необходимо отфильтровать -> $POST['login'] или $POST['password'], а 2 параметром она принимает тип фильтрации.
    В моем случае это FILTER_SANITIZE_STRING - самая обычная строка.

    Для самой строки применена функция trim - позволяет удалить лишние пробелы из какой либо строки.
    Соответственно мы берем $POST['login'] и $POST['password'], т.е. получаем с вами логин и пароль, которые пользователь ввел в форме. 
    Дальше мы удаляем из него все не нужные пробелы функцией - trim и удаляем все не нужные html символы,
    различные символы, которые не стоит добавлять в БД, функцией - filter_var. 

    Тоже самое делаю для поля password!
    */
    $login = filter_var(trim($_POST['login']),
    FILTER_SANITIZE_STRING);
    
    // $name = filter_var(trim($_POST['name']),
    // FILTER_SANITIZE_STRING);

    $password = filter_var(trim($_POST['password']),
    FILTER_SANITIZE_STRING);
    //Производим некоторые проверки:
    /* 
    Если длина переменной логин будет меньче чем 5 или же длина этой переменной 
    будет больше чем 90 символов, то, в так случае будет возникать ошибка - echo "Недопустимая длина логина";, а
    так же будем выходить из файла -> функция exit();
    */
    if(mb_strlen($login) < 5 || mb_strlen($login) > 90 ){
        echo "Недопустимая длина логина";
        exit();
    }
    /* 
    Иначе, если длина переменной имя будет меньче чем 3 или же длина этой переменной 
    будет больше чем 50 символов, то, в так случае будет возникать ошибка - echo "Недопустимая длина имени, а
    так же будем выходить из файла -> функция exit();
    */
    // else  if(mb_strlen($name) < 3 || mb_strlen($name) > 95 ){
    //     echo "Недопустимая длина имени";
    //     exit();
    // }
    /* 
    Иначе, если длина переменной пароль будет меньче чем 2 или же длина этой переменной 
    будет больше чем 6 символов, то, в так случае будет возникать ошибка - echo "Недопустимая длина пароля (от 2 до 6 символов)";, а
    так же будем выходить из файла -> функция exit();
    */
    else if(mb_strlen($password) < 2 || mb_strlen($password) > 6 ){
        echo "Недопустимая длина пароля (от 2 до 6 символов)";
        exit();
    }
    //Хеширование пароля. 
    /*Функция md5(); - создает хеш из какой либо нашей строки + дописывают соль -
    это некая дополнительная строка, которая добавляется к паролю пользователя, тем самым усложняя комбинацию пароля. 
    */
    //$password = md5($password."12343asdikjn21");
    //Если не было никаких ошибок, то код ниже, которые отвечает за подкючение к БД, будет работать.

    //Подключение к БД. (Используется класс mysali - улычшенный класс mysql, который принимает 4 параметра: 1 -хост, 2 - имя пользователя, 3 - пароль, 4 - имя БД)
    $mysql = new mysqli ('localhost', 'root', '', 'SDO_2023');
    /* 
    Теперь выполненно подключение к БД и я могу поместить данные в табличу, которая находится внутри БД.
    Для этого я обращаюсь к переменной $mysql. Дальше, через нее я обращаюсь к функции, которая называется 
    query();. Эта функция принимает некий sql запрос. Например запрос в котором говорится, что необходимо 
    вставить определенные значения внутрь такой то таблички, в такую то БД. Здесь используется страндартный язык sql - 
    язык запросов к БД. 
    */
    $mysql->query("INSERT INTO `users` (`login`, `password`) VALUES ('$login', '$password')");
     
    /* 
    Закрываем открытое соединение с БД. Закрывается соединение после того как мы выполнили все манипуляции с БД.
    Для закрытия я использую переменную $mysql и дальше я использую функцию close(), чтобы закрыть соединение. 
    */
    $mysql->close();
    /* 
    Выполняем переадресацию обратну на страницу с формой - "Пример обработки форм". Это делается с помощью функции header. 
    / - указатель на главную страницу. 
    */
    header('location: index.php');

?>